{"version":3,"sources":["ng://wos-api/variables.ts","ng://wos-api/configuration.ts","ng://wos-api/api/users.service.ts","node_modules/tslib/tslib.es6.js"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const BASE_PATH = new InjectionToken<string>('basePath');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","export interface ConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n}\n\nexport class Configuration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n\n    constructor(configurationParameters: ConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length == 0) {\n            return undefined;\n        }\n\n        let type = contentTypes.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length == 0) {\n            return undefined;\n        }\n\n        let type = accepts.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n}\n","/**\n * World_of_Stories-Api\n * Interactive stories application for NodeJs typescript server\n *\n * OpenAPI spec version: 1.0.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestDeleteUser } from '../model/requestDeleteUser';\nimport { RequestGetUser } from '../model/requestGetUser';\nimport { RequestLogin } from '../model/requestLogin';\nimport { RequestRemoveRol } from '../model/requestRemoveRol';\nimport { RequestSetRol } from '../model/requestSetRol';\nimport { RequestSignin } from '../model/requestSignin';\nimport { ResponseData } from '../model/responseData';\nimport { ResponseDeleteUser } from '../model/responseDeleteUser';\nimport { ResponseGetUser } from '../model/responseGetUser';\nimport { ResponseGetUsers } from '../model/responseGetUsers';\nimport { ResponseLogin } from '../model/responseLogin';\nimport { ResponseRemoveRol } from '../model/responseRemoveRol';\nimport { ResponseSetRol } from '../model/responseSetRol';\nimport { ResponseSignin } from '../model/responseSignin';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n    protected basePath = 'http://localhost:3000';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Delete an User\n     * Delete an user\n     * @param data Transaction details\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUser(data: RequestDeleteUser, observe?: 'body', reportProgress?: boolean): Observable<ResponseDeleteUser>;\n    public deleteUser(data: RequestDeleteUser, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<ResponseDeleteUser>>;\n    public deleteUser(data: RequestDeleteUser, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<ResponseDeleteUser>>;\n    public deleteUser(data: RequestDeleteUser, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (data === null || data === undefined) {\n            throw new Error('Required parameter data was null or undefined when calling deleteUser.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<ResponseDeleteUser>(`${this.basePath}/users/delete`,\n            data,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get an User\n     * Get an user\n     * @param data Transaction details\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUser(data: RequestGetUser, observe?: 'body', reportProgress?: boolean): Observable<ResponseGetUser>;\n    public getUser(data: RequestGetUser, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<ResponseGetUser>>;\n    public getUser(data: RequestGetUser, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<ResponseGetUser>>;\n    public getUser(data: RequestGetUser, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (data === null || data === undefined) {\n            throw new Error('Required parameter data was null or undefined when calling getUser.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<ResponseGetUser>(`${this.basePath}/users/user`,\n            data,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get All Users\n     * Get all Users\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUsers(observe?: 'body', reportProgress?: boolean): Observable<ResponseGetUsers>;\n    public getUsers(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<ResponseGetUsers>>;\n    public getUsers(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<ResponseGetUsers>>;\n    public getUsers(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n\n        return this.httpClient.get<ResponseGetUsers>(`${this.basePath}/users`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Login User\n     * login user\n     * @param data Transaction details\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public login(data: RequestLogin, observe?: 'body', reportProgress?: boolean): Observable<ResponseLogin>;\n    public login(data: RequestLogin, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<ResponseLogin>>;\n    public login(data: RequestLogin, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<ResponseLogin>>;\n    public login(data: RequestLogin, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (data === null || data === undefined) {\n            throw new Error('Required parameter data was null or undefined when calling login.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<ResponseLogin>(`${this.basePath}/users/login`,\n            data,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Remove User Rol\n     * Remove new rol to an User\n     * @param data Transaction details\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeRol(data: RequestRemoveRol, observe?: 'body', reportProgress?: boolean): Observable<ResponseRemoveRol>;\n    public removeRol(data: RequestRemoveRol, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<ResponseRemoveRol>>;\n    public removeRol(data: RequestRemoveRol, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<ResponseRemoveRol>>;\n    public removeRol(data: RequestRemoveRol, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (data === null || data === undefined) {\n            throw new Error('Required parameter data was null or undefined when calling removeRol.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<ResponseRemoveRol>(`${this.basePath}/users/remove_rol`,\n            data,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Set User Rol\n     * Set new rol to an User\n     * @param data Transaction details\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public setRol(data: RequestSetRol, observe?: 'body', reportProgress?: boolean): Observable<ResponseSetRol>;\n    public setRol(data: RequestSetRol, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<ResponseSetRol>>;\n    public setRol(data: RequestSetRol, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<ResponseSetRol>>;\n    public setRol(data: RequestSetRol, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (data === null || data === undefined) {\n            throw new Error('Required parameter data was null or undefined when calling setRol.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<ResponseSetRol>(`${this.basePath}/users/set_rol`,\n            data,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Sign in new User\n     * Sign in new user\n     * @param data Transaction details\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public signin(data: RequestSignin, observe?: 'body', reportProgress?: boolean): Observable<ResponseSignin>;\n    public signin(data: RequestSignin, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<ResponseSignin>>;\n    public signin(data: RequestSignin, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<ResponseSignin>>;\n    public signin(data: RequestSignin, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (data === null || data === undefined) {\n            throw new Error('Required parameter data was null or undefined when calling signin.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<ResponseSignin>(`${this.basePath}/users/signin`,\n            data,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n"],"names":["BASE_PATH","InjectionToken","Configuration","prototype","selectHeaderContentType","contentTypes","_this","this","length","undefined","type","find","x","isJsonMime","selectHeaderAccept","accepts","mime","jsonMime","RegExp","test","toLowerCase","configurationParameters","apiKeys","username","password","accessToken","basePath","withCredentials","UsersService","canConsumeForm","consumes","consumes_1","o","s","Symbol","iterator","m","i","call","next","value","done","TypeError","tslib_1.__values","consumes_1_1","deleteUser","data","observe","reportProgress","Error","headers","defaultHeaders","httpHeaderAcceptSelected","configuration","set","httpContentTypeSelected","httpClient","post","getUser","getUsers","get","login","removeRol","setRol","signin","Injectable","args","providedIn","HttpClient","Optional","Inject","decorators","HttpHeaders"],"mappings":"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"}